def create_board():
    return [[' ' for _ in range(3)] for _ in range(3)]

def display_board(board):
    for row in board:
        print('|'.join(row))
        print('-' * 5)

def check_winner(board, player):
    # Check rows, columns, and diagonals for a win
    for row in board:
        if all([cell == player for cell in row]):
            return True
    for col in range(3):
        if all([board[row][col] == player for row in range(3)]):
            return True
    if all([board[i][i] == player for i in range(3)]) or all([board[i][2-i] == player for i in range(3)]):
        return True
    return False

def check_tie(board):
    for row in board:
        if ' ' in row:
            return False
    return True

def play_game():
    board = create_board()
    current_player = 'X'
    while True:
        display_board(board)
        print(f"Player {current_player}'s turn.")
        row = int(input("Enter row (0, 1, 2): "))
        col = int(input("Enter column (0, 1, 2): "))
        if board[row][col] == ' ':
            board[row][col] = current_player
            if check_winner(board, current_player):
                display_board(board)
                print(f"Player {current_player} wins!")
                break
            if check_tie(board):
                display_board(board)
                print("It's a tie!")
                break
            current_player = 'O' if current_player == 'X' else 'X'
        else:
            print("Cell already taken, try again.")
    play_again = input("Do you want to play again? (yes/no): ")
    if play_again.lower() == 'yes':
        play_game()

if __name__ == "__main__":
    play_game()
